:root {
  font-family: "Chakra Petch", sans-serif;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #6e6e6e;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-shadow: 0.06em 0.06em rgb(4, 229, 143), -0.05em -0.07em rgb(230, 0, 255);
}

ul, ol, p, h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

button:hover {
  cursor: pointer;
}

body {
  margin: 0;
  padding: 0;
}

.wrap {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  min-height: 100vh;
  background-blend-mode: overlay;
  background-image:
          radial-gradient(circle, rgba(120, 130, 130, 1), rgba(60, 70, 70, 1) 80%),
          repeating-linear-gradient(0deg, #a8a8a8, #a8a8a8 2px, transparent 2px, transparent 5px);
  background-color: #3c4748;
  overflow: hidden;
}

.wrap::before {
  --color-burn: rgba(105,134,30, 0.3);
  content: "";
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  width: 100%;
  height: 70px;
  background-color: var(--color-burn);
  box-shadow: 0 0 30px 20px var(--color-burn);
  mix-blend-mode: multiply;
  animation: 16s infinite anmScreenBurn;
  pointer-events: none;
}

@keyframes anmScreenBurn {
  from {
    top: calc(100vh + 50px);
  }

  to {
    top: -120px;
  }
}

/* mainHeader */
.mainHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  box-shadow: 0 3px 10px rgba(24, 28, 28, 0.6);
}

.mainHeader a {
  color: #fff;
}

.mainHeader_title {
  flex: 1 0 auto;
  padding-left: 20px;
}

.formSwitchLang {

}

.navGlobal {
  padding-right: 10px;
}

.navList {
  display: flex;
  list-style: none;
}

.navList_item {
  margin: 0 1em;
}

/* mainContainer */
.mainContainer {
  flex: 1 0 auto;
}
.mainContainerHeader {
  padding-top: 60px;
  text-align: center;
}

#app {

}

/* mainFooter */
.mainFooter {
  height: 2em;
  line-height: 2em;
  padding: 0 20px;
  border-top: 1px solid rgba(255,255,255,0.4);
  color: #fff;
  text-align: right;
}

/* GamePlay */
.playBoardWrap {
  width: 90%;
  max-width: 800px;
  margin: 0 auto;
  padding-top: 50px;
}

.listPlayerActiveMatch {
  list-style: none;
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.4em;
  font-size: 1.6rem;
}

#playBoard {
  width: 100%;
  background-color: #000;
}

/* GameMatch */
.listPlayers {
  width: 90%;
  max-width: 800px;
  margin: 0 auto;
}

.unitPlayer {
  margin-bottom: 20px;
  border: 4px solid rgba(0, 0, 0, 0.5);
}

.unitPlayerHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: rgba(0, 0, 0, 0.5);
}

.unitPlayerHeader_name {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-end;
  align-items: center;
}

.unitPlayer_header h3 {
  margin-left: 1em;
  font-size: 1.6rem;
}

.unitPlayer_header .thumb {
  line-height: 0;
}

.unitPlayerHeader_button {
  position: relative;
  /*box-sizing: border-box;*/
  margin-right: 20px;
  padding: 0.2em 0.8em;
  background-color: rgba(105,134,30, 0.2);
  border: none;
  text-shadow: 0.06em 0.06em rgb(4, 229, 143), -0.05em -0.07em rgb(230, 0, 255);
  font-size: 1.3rem;
}

.unitPlayerHeader_button::before,
.unitPlayerHeader_button::after {
  content: "";
  box-sizing: border-box;
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.unitPlayerHeader_button::before {
  transform: translate(-1px, -1px);
  border: 1px solid rgb(230, 0, 255);
}

.unitPlayerHeader_button::after {
  transform: translate(1px, 1px);
  border: 1px solid rgb(4, 229, 143);
}

.unitPlayerHeader_button:hover::before {
  animation: 0.2s ease-out btnHover1;
}

.unitPlayerHeader_button:hover::after {
  animation: 0.2s ease-out btnHover2;
}

@keyframes btnHover1 {
  0% {
    transform: translate(-1px, -1px);
  }
  50% {
    transform: translate(1px, 1px);
  }
  100% {
    transform: translate(-1px, -1px);
  }
}

@keyframes btnHover2 {
  0% {
    transform: translate(1px, 1px);
  }
  50% {
    transform: translate(-1px, -1px);
  }
  100% {
    transform: translate(1px, 1px);
  }
}

.unitPlayer_score {
  display: flex;
  padding: 0.7em 0.8em 0.5em;
  font-size: 1.2rem;
}

.unitPlayer_score p:not(:last-child)::after {
  content: "/";
  margin: 0 1em;
}